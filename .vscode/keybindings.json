// Place your key bindings in this file to override the defaultsauto[]
[
    /* Don't interfere with Vims undo (cmd + z sometimes seems to lose Vims undo history, so it can be dangerous) */
    {
        "key": "shift+cmd+z",
        "command": "-redo"
    },
    {
        "key": "cmd+z",
        "command": "-undo"
    },
    /* "Full window" terminal, etc. */
    {
        "key": "cmd+z",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    /* "Pane" navigation */
    {
        "key": "cmd+h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.navigateUp"
    },
    /* Panel navigation */
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.focusPanel"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.closePanel",
        "when": "panelFocus"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.nextPanelView",
        "when": "panelFocus"
    },
    {
        "key": "cmd+h",
        "command": "workbench.action.previousPanelView",
        "when": "panelFocus"
    },
    /* cmd+shift+g = "Open Source Control" (to match the other side pane commands) */
    {
        "key": "shift+cmd+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "shift+cmd+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    /* Unbind "Find next/prev" since Vim already handles it with n/p */
    {
        "key": "shift+cmd+g",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+g",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+g",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "cmd+g",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    /* Quick Open navigation (same as the default ctrl+n/p) */
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+cmd+b",
        "command": "workbench.action.toggleAuxiliaryBar"
    }
    /* Quick Open (same as the default cmd+p) */
    /*{
                "key": "ctrl+p",
                "command": "workbench.action.quickOpen"
    }*/
    /* Other */
]
